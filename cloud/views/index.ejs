<!DOCTYPE html>
<html ng-app="friendmemos" class="ng-scope">
  <head>
    <script type="text/javascript">if (window.location.hash == '#_=_')window.location.hash = '';</script>
    <title>Friend Memos</title>
    <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
    <link rel="apple-touch-icon" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=1">
    <link href="http://friendmemos.parseapp.com/style.css" rel="stylesheet">
    <link href="http://netdna.bootstrapcdn.com/twitter-bootstrap/2.3.2/css/bootstrap-combined.min.css" rel="stylesheet">
    <script src="http://code.jquery.com/jquery-2.0.0.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/angular.min.js"></script>
    <script src="https://cdn.firebase.com/v0/firebase.js"></script>
    <script src="http://firebase.github.io/angularFire/angularFire.js"></script>
  </head>
  <body>
    <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container">
          <ul class="nav nav-pills">
            <li>
              <a href="/#/home">Friends</a>
            </li>
          </ul>
          <ul class="nav nav-pills pull-right">
            <li>
              <a href="/logout">Logout</a>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <div ng-view>
    </div>
  </body>

  <!-- Third party libraries from CDN -->
  <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.4.4/underscore-min.js"></script>
  <script src="http://friendmemos.parseapp.com/ng-infinite-scroll.min.js"></script>
  <div id="fb-root"></div>
  <script src="http://www.parsecdn.com/js/parse-1.2.8.min.js"></script>
  <script>
    Parse.initialize(
      "g9u5LRXS05d87Sg4j2N6COQ2LdD2lyZ8tQnN4AQ4", 
      "FaGNM3JF4acVw7mfDbLeAxro5taqSNGHiaLNh7IH"
    );
  </script>
  <script>
    window.fbAsyncInit = function() {
      // init the FB JS SDK
      Parse.FacebookUtils.init({
        appId      : '481249625300467',                        // App ID from the app dashboard
        channelUrl : 'http://friendmemos.parseapp.com/channel.html', // Channel file for x-domain comms
        status     : true,                                 // Check Facebook Login status
        xfbml      : true                                  // Look for social plugins on the page
      });

      // Additional initialization code such as adding Event Listeners goes here
    };
    // Load the SDK asynchronously
    (function(d, s, id){
       var js, fjs = d.getElementsByTagName(s)[0];
       if (d.getElementById(id)) {return;}
       js = d.createElement(s); js.id = id;
       js.src = "http://connect.facebook.net/en_US/all.js";
       fjs.parentNode.insertBefore(js, fjs);
     }(document, 'script', 'facebook-jssdk'));
  </script>
  <script>
angular.module('templates-main', ['partials/home.html', 'partials/memo.html', 'partials/login.html']);

angular.module("partials/home.html", []).run(["$templateCache", function($templateCache) {
  $templateCache.put("partials/home.html",
    "<div id=\"content\" class=\"container\">\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"span12\">\n" +
    "      <form class=\"form-search\">\n" +
    "         <input ng-model=\"query\" class=\"span12\">\n" +
    "      </form>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <div class=\"row\" ng-show=\"showMainList\">\n" +
    "    <div class=\"span12\" ng-show=\"friends\">\n" +
    "      <ul class=\"nav nav-tabs nav-stacked\" infinite-scroll='loadMore()' infinite-scroll-distance='2'>\n" +
    "        <li ng-repeat=\"friend in friends\">\n" +
    "          <a href=\"/#/friends/{{friend.uid}}\">{{friend.first_name}} {{friend.middle_name}} {{friend.last_name}}</a>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "    </div>\n" +
    "    <div class=\"span12\" ng-hide=\"friends\">\n" +
    "      <img src=\"http://friendmemos.parseapp.com/ajaxloader.gif\"></img>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <div class=\"row\" ng-hide=\"showMainList\">\n" +
    "    <div class=\"span12\" ng-show=\"searchListResults\">\n" +
    "      <ul class=\"nav nav-tabs nav-stacked\">\n" +
    "        <li ng-repeat=\"result in searchListResults\">\n" +
    "          <a href=\"/#/friends/{{result.uid}}\">{{result.first_name}} {{result.middle_name}} {{result.last_name}}</a>\n" +
    "        </li>\n" +
    "      </ul>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>");
}]);

angular.module("partials/memo.html", []).run(["$templateCache", function($templateCache) {
  $templateCache.put("partials/memo.html",
    "<div id=\"content\" class=\"container\">\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"span12\">\n" +
    "      <h4>{{ pageName }}</h4>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"span12\" ng-show=\"memo\">\n" +
    "      <form class=\"form-horizontal\">\n" +
    "        <div class=\"control-group\">\n" +
    "          <textarea rows=\"5\" ng-model=\"memo.text\" value=\"{{memo.text}}\" class=\"span12\"></textarea>\n" +
    "        </div>\n" +
    "      </form>\n" +
    "    </div>\n" +
    "    <div class=\"span12\" ng-hide=\"memo\">\n" +
    "      <img src=\"http://friendmemos.parseapp.com/ajaxloader.gif\"></img>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"span12\">\n" +
    "      <a href=\"/#/\">Back to friends list</a>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "</div>");
}]);

angular.module("partials/login.html", []).run(["$templateCache", function($templateCache) {
  $templateCache.put("partials/login.html",
    "<div id=\"content\" class=\"container\">\n" +
    "  <div class=\"row\">\n" +
    "    <div class=\"span12\">\n" +
    "      <button class=\"btn\" type=\"submit\">Login</button>\n" +
    "    </div>\n" +
    "  </div>\n"+
    "</div>");
}]);

var app = angular.module('friendmemos', [
    'templates-main',
    'infinite-scroll',
    'firebase'
  ]).value('firebaseURL', 'https://friendmemos.firebaseIO.com').config([
    '$routeProvider',
    function ($routeProvider) {
      $routeProvider.when('/home', {
        templateUrl: 'partials/home.html',
        controller: HomeCtrl
      }).when('/friends/:uid', {
        templateUrl: 'partials/memo.html',
        controller: MemoCtrl
      }).when('/login', {
        templateUrl: 'partials/login.html',
        controller: LoginCtrl
      }).otherwise({ redirectTo: '/login' });
    }
  ]).run(function ($rootScope, $http) {
    var hostname = '//';
    var remoteHostname = 'http://friendmemos.parseapp.com'
    //$rootScope.appData = $http.get(remoteHostname + '/init');
  });
;
var FRIEND_SEARCH_RESULTS_LIMIT = 10;
var INFINITE_SCROLL_ITEMS_PER_BATCH = 20;
function HomeCtrl($scope) {
  $scope.pageName = 'Friends';
  var previousQueryStringLength = 0;
  var previousResults = [];
  $scope.$watch('query', function () {
    if ($scope.query) {
      var lowerCaseQueryString = $scope.query.toLowerCase();
    } else {
      lowerCaseQueryString = '';
    }
    if (lowerCaseQueryString) {
      $scope.showMainList = false;
    } else {
      $scope.showMainList = true;
      return;
    }
    if (lowerCaseQueryString.length < previousQueryStringLength) {
      var friends = previousResults;
      var results = _searchForFriends(lowerCaseQueryString, friends, FRIEND_SEARCH_RESULTS_LIMIT);
      $scope.searchListResults = _.first(results, FRIEND_SEARCH_RESULTS_LIMIT);
      previousResults = results;
    } else {
      $scope.appData.then(function (res) {
        var initData = res.data;
        var results = _searchForFriends(lowerCaseQueryString, initData.friends, FRIEND_SEARCH_RESULTS_LIMIT);
        $scope.searchListResults = _.first(results, FRIEND_SEARCH_RESULTS_LIMIT);
      });
      previousResults = results;
    }
  });
  var index = 0;
  $scope.loadMore = function () {
    $scope.appData.then(function (res) {
      var initData = res.data;
      console.log(initData);
      if (!$scope.friends) {
        $scope.friends = [];
      }
      for (var i = 0; i < INFINITE_SCROLL_ITEMS_PER_BATCH; i++) {
        if (!initData.friends || !initData.friends[index]) {
          break;
        }
        $scope.friends.push(initData.friends[index]);
        index++;
      }
    }, function (err) {
    });
  };
}
function MemoCtrl($scope, $routeParams, angularFire, firebaseURL) {
  $scope.appData.then(function (res) {
    var initData = res.data;
    var friend = _.find(initData.friends, function (friend) {
        if (friend.uid == $routeParams.uid) {
          return friend;
        }
      });
    $scope.pageName = 'Memo for ' + _constructDisplayName(friend.first_name, friend.middle_name, friend.last_name);
    var dataRef = new Firebase(firebaseURL);
    dataRef.auth(initData.firebaseToken, function (error, authData) {
      if (error) {
        alert('Failed to connect to database!', error);
      } else {
        var memoRefUrl = firebaseURL + '/users/' + initData.user.id + '/fbFriendMemos/' + $routeParams.uid;
        angularFire(memoRefUrl, $scope, 'memo', {});
      }
    });
  });
}
function LoginCtrl($scope, $routeParams, angularFire, firebaseURL) {
  
}
function _searchForFriends(queryString, friends) {
  var searchListIndex = 0;
  var firstNameStringMatches = [];
  var middleNameStringMatches = [];
  var lastNameStringMatches = [];
  var containStringMatches = [];
  while (searchListIndex < friends.length - 1) {
    var friend = friends[searchListIndex];
    var firstNameIndex = -1;
    var middleNameIndex = -1;
    var lastNameIndex = -1;
    var matched = false;
    if (friend.first_name) {
      firstNameIndex = friend.first_name.toLowerCase().indexOf(queryString);
      if (firstNameIndex == 0) {
        firstNameStringMatches.push(friend);
        matched = true;
      }
    }
    if (!matched && friend.middle_name) {
      middleNameIndex = friend.middle_name.toLowerCase().indexOf(queryString);
      if (middleNameIndex == 0) {
        middleNameStringMatches.push(friend);
        matched = true;
      }
    }
    if (!matched && friend.last_name) {
      lastNameIndex = friend.last_name.indexOf(queryString);
      if (lastNameIndex == 0) {
        lastNameStringMatches.push(friend);
        matched = true;
      }
    }
    if (!matched) {
      var fullName = _constructDisplayName(friend.first_name, friend.middle_name, friend.last_name);
      if (fullName.toLowerCase().indexOf(queryString) != -1) {
        containStringMatches.push(friend);
      }
    }
    searchListIndex++;
  }
  return _.union(firstNameStringMatches, middleNameStringMatches, lastNameStringMatches, containStringMatches);
}
function _constructDisplayName(firstName, middleName, lastName) {
  var displayName = firstName;
  if (middleName) {
    displayName = displayName + ' ' + middleName;
  }
  if (lastName) {
    displayName = displayName + ' ' + lastName;
  }
  return displayName;
}
  </script>
</html>
<!DOCTYPE html>